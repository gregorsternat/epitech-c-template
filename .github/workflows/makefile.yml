name: 

on: [push, pull_request]

env:
  MIRROR_URL: 
  EXECUTABLES:

jobs:
  check_coding_style:
    name: Check coding style
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/epitech/coding-style-checker:latest
    env:
      REPORT_FILENAME: coding-style-reports.log

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Checking coding-style
        run: |
          check.sh $(pwd) $(pwd)
          cat $REPORT_FILENAME | while read LINE; do
              TYPE=$(echo $LINE | cut -d ':' -f 3 | tr -d ' ')
              FILE=$(echo $LINE | cut -d ':' -f 1)
              AT=$(echo $LINE | cut -d ':' -f 2)
              ERROR=$(echo $LINE | cut -d ':' -f 4)
              echo "::error file=$FILE,line=$AT,title=$TYPE coding style error::$ERROR"
          done
          if [[ -s $REPORT_FILENAME ]]; then
            exit 1
          fi
  build_and_test:
    name: Build, test and memory check
    needs: [check_coding_style]
    runs-on: ubuntu-latest
    container:
      image: yanis897349/lw-epitest-docker

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Building project
        timeout-minutes: 2
        run: make

      - name: Check executable
        run: |
            if [[ ! -f $EXECUTABLES ]]; then
                echo "::error file=$EXECUTABLES::Executable not found"
                exit 1
            fi
      - name: Launch unit tests
        timeout-minutes: 2
        run: make tests_run

      - name: Valgrind memory check
        timeout-minutes: 2
        run: make valgrind